package ru.maksonic.beresta.ui.theme.color.palette

import ru.maksonic.beresta.ui.theme.color.AppColor
import ru.maksonic.beresta.ui.theme.color.Palette

/**
 * @Author maksonic on 25.02.2023
 */
val baseLightPalette = AppColor(
    primary = Palette.Blue.azureRadiance,
    onPrimary = Palette.white,
    primaryContainer = Palette.white,
    onPrimaryContainer = Palette.black,
    secondary = Palette.doveGray,
    onSecondary = Palette.black,
    secondaryContainer = Palette.black,
    onSecondaryContainer = Palette.black,
    tertiary = Palette.chineseSilver,
    onTertiary = Palette.nero,
    tertiaryContainer = Palette.antiFlashWhite,
    onTertiaryContainer = Palette.lightSilver,
    error = Palette.carmineRed,
    onError = Palette.carmineRed,
    errorContainer = Palette.carmineRed,
    onErrorContainer = Palette.carmineRed,
    background = Palette.snow,
    onBackground = Palette.nero,
    surface = Palette.white,
    onSurface = Palette.Blue.frenchPassLight,
    surfaceVariant = Palette.platinum,
    onSurfaceVariant = Palette.Blue.solitude,
    outline = Palette.carmineRed,
    shadow = Palette.black,
    scrim = Palette.black.copy(alpha = 0.24f),
    transparent = Palette.transparent,
    idle = Palette.Blue.azureRadiance,
    black = Palette.black,
    blue = Palette.Blue.azureRadiance,
    green = Palette.Green.electricGreen,
    purple = Palette.Purple.electricViolet,
    red = Palette.Red.coralRed,
    orange = Palette.Orange.vividGamboge,
    yellow = Palette.Yellow.bananaYellow,
)

val baseDarkPalette = AppColor(
    primary = Palette.Blue.anakiwa,
    onPrimary = Palette.black,
    primaryContainer = Palette.mineShaft,
    onPrimaryContainer = Palette.white,
    secondary = Palette.chineseSilver,
    onSecondary = Palette.white,
    secondaryContainer = Palette.doveGray,
    onSecondaryContainer = Palette.gray,
    tertiary = Palette.doveGray,
    onTertiary = Palette.white,
    tertiaryContainer = Palette.tundora,
    onTertiaryContainer = Palette.doveGray,
    error = Palette.carmineRed,
    onError = Palette.carmineRed,
    errorContainer = Palette.carmineRed,
    onErrorContainer = Palette.carmineRed,
    background = Palette.nero,
    onBackground = Palette.snow,
    surface = Palette.mineShaft,
    onSurface = Palette.tundora,
    surfaceVariant = Palette.tundora,
    onSurfaceVariant = Palette.tundora,
    outline = Palette.carmineRed,
    shadow = Palette.black,
    scrim = Palette.black.copy(alpha = 0.32f),
    transparent = Palette.transparent,
    idle = Palette.Blue.azureRadiance,
    black = Palette.white,
    blue = Palette.Blue.anakiwa,
    green = Palette.Green.mintGreen,
    purple = Palette.Purple.paleViolet,
    red = Palette.Red.roseBud,
    orange = Palette.Orange.peachOrange,
    yellow = Palette.Yellow.pastelYellow,
)

val highContrastPalette = AppColor(
    primary = Palette.Blue.azureRadiance,
    onPrimary = Palette.black,
    primaryContainer = Palette.nero,
    onPrimaryContainer = Palette.white,
    secondary = Palette.white,
    onSecondary = Palette.white,
    secondaryContainer = Palette.doveGray,
    onSecondaryContainer = Palette.gray,
    tertiary = Palette.doveGray,
    onTertiary = Palette.white,
    tertiaryContainer = Palette.black,
    onTertiaryContainer = Palette.mineShaft,
    error = Palette.carmineRed,
    onError = Palette.carmineRed,
    errorContainer = Palette.carmineRed,
    onErrorContainer = Palette.carmineRed,
    background = Palette.black,
    onBackground = Palette.white,
    surface = Palette.nero,
    onSurface = Palette.doveGray,
    surfaceVariant = Palette.mineShaft,
    onSurfaceVariant = Palette.tundora,
    outline = Palette.carmineRed,
    shadow = Palette.black,
    scrim = Palette.black.copy(alpha = 0.8f),
    transparent = Palette.transparent,
    idle = Palette.Blue.azureRadiance,
    black = Palette.mineShaft,
    blue = Palette.Blue.azureRadiance,
    green = Palette.Green.electricGreen,
    purple = Palette.Purple.electricViolet,
    red = Palette.Red.coralRed,
    orange = Palette.Orange.vividGamboge,
    yellow = Palette.Yellow.bananaYellow,
)